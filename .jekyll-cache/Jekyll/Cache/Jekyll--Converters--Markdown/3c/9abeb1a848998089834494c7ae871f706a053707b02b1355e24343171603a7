I"Zd<p>新增--input file美化：&lt;/p&gt;<p>&lt;span style="color: rgb(34, 34, 34); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 13px; line-height: 22.1px;"&gt;bootstrap 的 file 组件，繁琐，但兼容全面。&lt;/span&gt;</p><p></p><pre><span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"lefile"</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">style=</span><span class="s">"display:none"</span><span class="nt">&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"input-append"</span><span class="nt">&gt;</span>
   <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"photoCover"</span> <span class="na">class=</span><span class="s">"input-large"</span> <span class="na">type=</span><span class="s">"text"</span><span class="nt">&gt;</span>
   <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">onclick=</span><span class="s">"$('input[id=lefile]').click();"</span><span class="nt">&gt;</span>Browse<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span><br /></pre>&lt;pre style="font-family: Menlo, Monaco, Consolas, "Andale Mono", "lucida console", "Courier New", monospace; margin-bottom: 0px; color: rgb(34, 34, 34); font-size: 12px; line-height: 18px;"&gt;&lt;code class="language-js" style="font-family: Menlo, Monaco, Consolas, "Andale Mono", "lucida console", "Courier New", monospace; overflow: auto;"&gt;<span class="nx">$</span><span class="p">(</span><span class="s1" style="color: rgb(221, 51, 34);">'input[id=lefile]'</span><span class="p">).</span><span class="nx">change</span><span class="p">(</span><span class="kd" style="font-weight: 700;">function</span><span class="p">()</span> <span class="p">{</span>
   <span class="nx">$</span><span class="p">(</span><span class="s1" style="color: rgb(221, 51, 34);">'#photoCover'</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k" style="font-weight: 700;">this</span><span class="p">).</span><span class="nx">val</span><span class="p">());</span>
<span class="p">});</span>&lt;/code&gt;&lt;/pre&gt;<p></p><p><br /></p>
<h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"><span style="color: rgb(255, 255, 255);">前言</span></h3>&lt;p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: "microsoft yahei"; font-size: 15px; line-height: 35px;"&gt;在 HTML 文档中 &lt;input type="file"&gt; 标签每出现一次，一个 FileUpload 对象就会被创建。&lt;/p&gt;&lt;p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: "microsoft yahei"; font-size: 15px; line-height: 35px;"&gt;</p>
<p>&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;该元素包含一个文本输入字段，用来输入文件名，还有一个按钮，用来打开文件选择对话框以便图形化选择文件。&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;该元素的 value 属性保存了用户指定的文件的名称，但是当包含一个 file-upload 元素的表单被提交的时候，浏览器会向服务器发送选中的文件的内容而不仅仅是发送文件名。&lt;/p&gt;&lt;p&gt;&lt;span style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;当用户选择或编辑一个文件名，file-upload 元素触发 onchange 事件句柄。&lt;/span&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;看个简单例子：&lt;/p&gt;&lt;pre style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;pre style="line-height: 1.42857; border: 0px; border-radius: 0px; background: transparent;"&gt;&lt;div id="LC1" class="line"&gt;&lt;!– oscar999  –&gt;&lt;/div&gt;&lt;div id="LC2" class="line"&gt;&lt;!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN”&gt;&lt;/div&gt;&lt;div id="LC3" class="line"&gt;&lt;html&gt;&lt;/div&gt;&lt;div id="LC4" class="line"&gt;  &lt;head&gt;&lt;/div&gt;&lt;div id="LC5" class="line"&gt;  &lt;meta http-equiv=”content-type” content=”text/html; charset=utf-8”&gt;&lt;/div&gt;&lt;div id="LC6" class="line"&gt;  &lt;meta name=”author” content=”oscar999”&gt;&lt;/div&gt;&lt;div id="LC7" class="line"&gt;  &lt;title&gt;&lt;/title&gt;&lt;/div&gt;&lt;div id="LC8" class="line"&gt;  &lt;script&gt;&lt;/div&gt;&lt;div id="LC9" class="line"&gt;  function  handleFiles(files)&lt;/div&gt;&lt;div id="LC10" class="line"&gt;  {&lt;/div&gt;&lt;div id="LC11" class="line"&gt;    if(files.length)&lt;/div&gt;&lt;div id="LC12" class="line"&gt;    {&lt;/div&gt;&lt;div id="LC13" class="line"&gt;       var file = files[0];&lt;/div&gt;&lt;div id="LC14" class="line"&gt;       var reader = new FileReader();&lt;/div&gt;&lt;div id="LC15" class="line"&gt;       reader.onload = function()&lt;/div&gt;&lt;div id="LC16" class="line"&gt;       {&lt;/div&gt;&lt;div id="LC17" class="line"&gt;           document.getElementById(“filecontent”).innerHTML = this.result;&lt;/div&gt;&lt;div id="LC18" class="line"&gt;       };&lt;/div&gt;&lt;div id="LC19" class="line"&gt;       reader.readAsText(file);&lt;/div&gt;&lt;div id="LC20" class="line"&gt;    }&lt;/div&gt;&lt;div id="LC21" class="line"&gt;  }&lt;/div&gt;&lt;div id="LC22" class="line"&gt;  &lt;/script&gt;&lt;/div&gt;&lt;div id="LC23" class="line"&gt;  &lt;/div&gt;&lt;div id="LC24" class="line"&gt;  &lt;/head&gt;&lt;/div&gt;&lt;div id="LC25" class="line"&gt;  &lt;body&gt;&lt;/div&gt;&lt;div id="LC26" class="line"&gt;<br />&lt;/div&gt;&lt;div id="LC27" class="line"&gt;  &lt;input type=”file” id=”file” onchange=”handleFiles(this.files)”/&gt;&lt;/div&gt;&lt;div id="LC28" class="line"&gt;  &lt;div id=”filecontent”&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="LC29" class="line"&gt;  &lt;/body&gt;&lt;/div&gt;&lt;div id="LC30" class="line"&gt;&lt;/html&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;这里读取一个文件， 显示在div 中。&lt;/span&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;(在IE8 中 无效， this.files 无法读取文件。这个属于html5 的特性)<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;当选择了一个文件时，就会把包含这个文件的列表（一个FileList对象）作为参数传给handleFiles()函数了。&lt;br&gt;这个FileList对象类似一个数组，可以知道文件的数目，而它的元素就是File对象了。&lt;br&gt;从这个File对象可以获取name、size、lastModifiedDate和type等属性。&lt;br&gt;把这个File对象传给FileReader对象的读取方法，就能读取文件了。&lt;br&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"&gt;<a name="t1" style="color: rgb(12, 137, 207);"></a><span style="color: rgb(255, 255, 255);">HTML5 Drag and Drop File</span><br />&lt;/h3&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;HTML5 支持的File 的操作不仅仅是文件的选择，&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;在HTML5 之前需要使用 Applet 和 SilverLight 才能达到的文件拖拽功能，在HTML5 中也能轻松的实现，&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;看代码：&lt;/p&gt;&lt;pre style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;pre style="line-height: 1.42857; border: 0px; border-radius: 0px; background: transparent;"&gt;&lt;div id="LC1" class="line"&gt;&lt;!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN”&gt;&lt;/div&gt;&lt;div id="LC2" class="line"&gt;&lt;html&gt;&lt;/div&gt;&lt;div id="LC3" class="line"&gt;  &lt;head&gt;&lt;/div&gt;&lt;div id="LC4" class="line"&gt;  &lt;meta http-equiv=”content-type” content=”text/html; charset=utf-8”&gt;&lt;/div&gt;&lt;div id="LC5" class="line"&gt;  &lt;meta name=”author” content=”oscar999”&gt;&lt;/div&gt;&lt;div id="LC6" class="line"&gt;  &lt;title&gt;&lt;/title&gt;&lt;/div&gt;&lt;div id="LC7" class="line"&gt;  &lt;/head&gt;&lt;/div&gt;&lt;div id="LC8" class="line"&gt;  &lt;body&gt;&lt;/div&gt;&lt;div id="LC9" class="line"&gt;    &lt;div id=”dropbox”&gt; Drop Here &lt;/div&gt;&lt;/div&gt;&lt;div id="LC10" class="line"&gt;    &lt;div id=”filecontent”&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="LC11" class="line"&gt;    &lt;script&gt;&lt;/div&gt;&lt;div id="LC12" class="line"&gt;      var dropbox = document.getElementById(“dropbox”);  &lt;/div&gt;&lt;div id="LC13" class="line"&gt;      dropbox.addEventListener(“dragenter”, dragenter, false);  &lt;/div&gt;&lt;div id="LC14" class="line"&gt;      dropbox.addEventListener(“dragover”, dragover, false);  &lt;/div&gt;&lt;div id="LC15" class="line"&gt;      dropbox.addEventListener(“drop”, drop, false);   &lt;/div&gt;&lt;div id="LC16" class="line"&gt;<br />&lt;/div&gt;&lt;div id="LC17" class="line"&gt;    function dragenter(e) {  &lt;/div&gt;&lt;div id="LC18" class="line"&gt;        e.stopPropagation();  &lt;/div&gt;&lt;div id="LC19" class="line"&gt;        e.preventDefault();  &lt;/div&gt;&lt;div id="LC20" class="line"&gt;    }  &lt;/div&gt;&lt;div id="LC21" class="line"&gt;<br />&lt;/div&gt;&lt;div id="LC22" class="line"&gt;    function dragover(e) {  &lt;/div&gt;&lt;div id="LC23" class="line"&gt;        e.stopPropagation();  &lt;/div&gt;&lt;div id="LC24" class="line"&gt;        e.preventDefault();  &lt;/div&gt;&lt;div id="LC25" class="line"&gt;    }&lt;/div&gt;&lt;div id="LC26" class="line"&gt;<br />&lt;/div&gt;&lt;div id="LC27" class="line"&gt;    function drop(e) {  &lt;/div&gt;&lt;div id="LC28" class="line"&gt;        e.stopPropagation();  &lt;/div&gt;&lt;div id="LC29" class="line"&gt;        e.preventDefault();   &lt;/div&gt;&lt;div id="LC30" class="line"&gt;        var dt = e.dataTransfer;  &lt;/div&gt;&lt;div id="LC31" class="line"&gt;        var files = dt.files;&lt;/div&gt;&lt;div id="LC32" class="line"&gt;        if(files.length)&lt;/div&gt;&lt;div id="LC33" class="line"&gt;        {&lt;/div&gt;&lt;div id="LC34" class="line"&gt;           var file = files[0];&lt;/div&gt;&lt;div id="LC35" class="line"&gt;           var reader = new FileReader();&lt;/div&gt;&lt;div id="LC36" class="line"&gt;           reader.onload = function()&lt;/div&gt;&lt;div id="LC37" class="line"&gt;           {&lt;/div&gt;&lt;div id="LC38" class="line"&gt;               document.getElementById(“filecontent”).innerHTML = this.result;&lt;/div&gt;&lt;div id="LC39" class="line"&gt;           };&lt;/div&gt;&lt;div id="LC40" class="line"&gt;           reader.readAsText(file);&lt;/div&gt;&lt;div id="LC41" class="line"&gt;        }&lt;/div&gt;&lt;div id="LC42" class="line"&gt;    } &lt;/div&gt;&lt;div id="LC43" class="line"&gt;          &lt;/div&gt;&lt;div id="LC44" class="line"&gt;    &lt;/script&gt;&lt;/div&gt;&lt;div id="LC45" class="line"&gt;  &lt;/body&gt;&lt;/div&gt;&lt;div id="LC46" class="line"&gt;&lt;/html&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;这里通过事件对象的 dataTransfer 可以得到文件。&lt;/span&gt;&lt;br style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"&gt;<a name="t2" style="color: rgb(12, 137, 207);"></a><span style="color: rgb(255, 255, 255);">读取文件内容</span><br />&lt;/h3&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;在第一个例子中， 我们使用 FileReader类来读取文件的内容，&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;在 W3C 草案中，File 对象只包含文件名，文件类型等只读属性;FileReader用于内容读取和监控读取状态。&lt;br&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;（在firefox 中， 可以直接使用<span class="sh_keyword"> var</span> fileBinary <span class="sh_symbol">=</span> file<span class="sh_symbol">.</span><span class="sh_function">getAsBinary</span><span class="sh_symbol">();</span>  读取文件的二进制源码）&lt;br&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;FileReader提供的方法包括：&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;1. readAsBinaryString&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;2. readAsDataURL&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;3. readAsText&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;4. abort&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;………&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;以下，举一个 使用 FileReader 将用户选择的图片不通过后台即时显示出来的例子。&lt;/p&gt;&lt;pre style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;pre style="line-height: 1.42857; border: 0px; border-radius: 0px; background: transparent;"&gt;&lt;div id="LC1" class="line"&gt;function handleFiles(files){&lt;/div&gt;&lt;div id="LC2" class="line"&gt;    for (var i = 0; i &lt; files.length; i++) {&lt;/div&gt;&lt;div id="LC3" class="line"&gt;        var file = files[i];&lt;/div&gt;&lt;div id="LC4" class="line"&gt;        var imageType = /image.*/;&lt;/div&gt;&lt;div id="LC5" class="line"&gt;        &lt;/div&gt;&lt;div id="LC6" class="line"&gt;        if (!file.type.match(imageType)) {&lt;/div&gt;&lt;div id="LC7" class="line"&gt;            continue;&lt;/div&gt;&lt;div id="LC8" class="line"&gt;        }&lt;/div&gt;&lt;div id="LC9" class="line"&gt;        &lt;/div&gt;&lt;div id="LC10" class="line"&gt;        var img = document.createElement(“img”);&lt;/div&gt;&lt;div id="LC11" class="line"&gt;        img.classList.add(“obj”);&lt;/div&gt;&lt;div id="LC12" class="line"&gt;        img.file = file;&lt;/div&gt;&lt;div id="LC13" class="line"&gt;        preview.appendChild(img);&lt;/div&gt;&lt;div id="LC14" class="line"&gt;        &lt;/div&gt;&lt;div id="LC15" class="line"&gt;        var reader = new FileReader();&lt;/div&gt;&lt;div id="LC16" class="line"&gt;        reader.onload = (function(aImg){&lt;/div&gt;&lt;div id="LC17" class="line"&gt;            return function(e){&lt;/div&gt;&lt;div id="LC18" class="line"&gt;                aImg.src = e.target.result;&lt;/div&gt;&lt;div id="LC19" class="line"&gt;            };&lt;/div&gt;&lt;div id="LC20" class="line"&gt;        })(img);&lt;/div&gt;&lt;div id="LC21" class="line"&gt;        reader.readAsDataURL(file);&lt;/div&gt;&lt;div id="LC22" class="line"&gt;    }&lt;/div&gt;&lt;div id="LC23" class="line"&gt;}&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"&gt;<a name="t3" style="color: rgb(12, 137, 207);"></a><span style="color: rgb(255, 255, 255);">同后端的交互</span><br />&lt;/h3&gt;&lt;p&gt;&lt;span style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;在一般的HTML  中，使用方式是把file input 放在form 中， 以POST 方式把文件传递到后端。&lt;/span&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;在 HTML5 中， 也可以通过 FileReader 的 readAsBinaryString 方法读取到文件的二进制码，然后通过 XMLHttpRequest 的 sendAsBinary 方法将其发送出去。&lt;/p&gt;&lt;pre style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;div id=”LC1” class=”line” style=”color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, “Courier New”, monospace; font-size: 13px; line-height: 18.5714px; background-color: rgb(249, 249, 249);”&gt;<span class="kd" style="color: rgb(38, 139, 210);">var</span> <span class="nx" style="color: rgb(72, 106, 106);">xhr</span> <span class="o" style="color: rgb(133, 153, 0);">=</span> <span class="k" style="color: rgb(210, 115, 38);">new</span> <span class="nx" style="color: rgb(72, 106, 106);">XMLHttpRequest</span><span class="p" style="color: rgb(130, 149, 149);">();</span>&lt;/div&gt;&lt;div id=”LC2” class=”line” style=”color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, “Courier New”, monospace; font-size: 13px; line-height: 18.5714px; background-color: rgb(249, 249, 249);”&gt;<span class="nx" style="color: rgb(72, 106, 106);">xhr</span><span class="p" style="color: rgb(130, 149, 149);">.</span><span class="nx" style="color: rgb(72, 106, 106);">open</span><span class="p" style="color: rgb(130, 149, 149);">(</span><span class="s2" style="color: rgb(42, 161, 152);">“POST”</span><span class="p" style="color: rgb(130, 149, 149);">,</span> <span class="s2" style="color: rgb(42, 161, 152);">“url”</span><span class="p" style="color: rgb(130, 149, 149);">);</span>&lt;/div&gt;&lt;div id=”LC3” class=”line” style=”color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, “Courier New”, monospace; font-size: 13px; line-height: 18.5714px; background-color: rgb(249, 249, 249);”&gt;<span class="nx" style="color: rgb(72, 106, 106);">xhr</span><span class="p" style="color: rgb(130, 149, 149);">.</span><span class="nx" style="color: rgb(72, 106, 106);">overrideMimeType</span><span class="p" style="color: rgb(130, 149, 149);">(</span><span class="s1" style="color: rgb(42, 161, 152);">‘text/plain; charset=x-user-defined-binary’</span><span class="p" style="color: rgb(130, 149, 149);">);</span>&lt;/div&gt;&lt;div id=”LC4” class=”line” style=”color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, “Courier New”, monospace; font-size: 13px; line-height: 18.5714px; background-color: rgb(249, 249, 249);”&gt;<span class="o" style="color: rgb(133, 153, 0);">&lt;</span><span class="nx" style="color: rgb(72, 106, 106);">pre</span> <span class="kr" style="color: rgb(38, 139, 210);">class</span><span class="o" style="color: rgb(133, 153, 0);">=</span><span class="s2" style="color: rgb(42, 161, 152);">“sh_javascript sh_sourceCode”</span><span class="o" style="color: rgb(133, 153, 0);">&gt;</span><span class="nx" style="color: rgb(72, 106, 106);">xhr</span><span class="o" style="color: rgb(133, 153, 0);">&lt;</span><span class="nx" style="color: rgb(72, 106, 106);">span</span> <span class="kr" style="color: rgb(38, 139, 210);">class</span><span class="o" style="color: rgb(133, 153, 0);">=</span><span class="s2" style="color: rgb(42, 161, 152);">“sh_symbol”</span><span class="o" style="color: rgb(133, 153, 0);">&gt;</span><span class="p" style="color: rgb(130, 149, 149);">.</span><span class="o" style="color: rgb(133, 153, 0);">&lt;</span><span class="err" style="color: rgb(196, 5, 104); background: rgb(247, 220, 220);">/span&gt;&lt;span class=”sh_function”&gt;sendAsBinary&lt;/span&gt;&lt;span class=”sh_symbol”&gt;(&lt;/span&gt;binaryString&lt;span class=”sh_symbol”&gt;);&lt;/span&gt;</span>&lt;/div&gt;&lt;/pre&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"&gt;<a name="t4" style="color: rgb(12, 137, 207);"></a><span style="color: rgb(255, 255, 255);">参考&lt;/span&gt;&lt;/h3&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;ul style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;li&gt;<a target="_blank" class="link_external" href="http://www.w3.org/TR/FileAPI/" style="color: rgb(12, 137, 207);">W3C File API</a>&lt;/li&gt;&lt;li&gt;<a target="_blank" class="link_external" href="https://developer.mozilla.org/en/DOM/File" style="color: rgb(12, 137, 207);">MDC File</a>&lt;/li&gt;&lt;/ul&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;<br />&lt;/p&gt;&lt;p style=”margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;&lt;/p&gt;&lt;h3 style="color: rgb(85, 85, 85); line-height: 35px; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(83, 142, 213);"&gt;<a name="t5" style="color: rgb(12, 137, 207);"></a><span style="color: rgb(255, 255, 255);">浏览器支持&lt;/span&gt;<br />&lt;/h3&gt;&lt;p&gt;&lt;span style=”color: rgb(85, 85, 85); font-family: “microsoft yahei”; font-size: 15px; line-height: 35px;”&gt;适用于 Firefox 3.6+ ，Chrome ，部分适用于其他支持 HTML 5 接口的浏览器，完全不适用于 IE8 及以下版本&lt;/span&gt;<br />&lt;/p&gt;</span></span></p>
:ET